{"name":"JavaScript-Objective-C Bridge","body":"JavaScript-Objective-C Bridge\r\n=============================\r\n\r\nThe JavaScript-Objective-C bridge lets you call Objective-C functions from JavaScript code loaded in a UIWebView instance.\r\n\r\nNote that this project is currently VERY VERY ALPHA state. Please don't use it:)\r\n\r\nDemo Video\r\n-----------\r\n\r\n[See on YouTube](http://www.youtube.com/watch?v=sbs7L4WUhU4)\r\n\r\nLow Level API\r\n-------------\r\n\r\nPass operands and operators through the `location.href` property.\r\nThe path part of the specifined URL is used to represent a sequence of instruction.\r\nJavaScript-Objective-C bridge bridge works as a stack machine.\r\n\r\nFor example:\r\n\r\n    location.href = \"bridge:///-123/-456/@add/-hoge/-1/@callback\"\r\n\r\nIn this example, list of instructions is represented as `-123/-456/@add/-hoge/-1/@callback`.\r\nA path component beginning with `-` means a operand, and a path component beginning with `@` means operator.\r\n\r\nOperators are defined as methods of the `JavaScriptBridge` class.  See the source code for more detail.\r\n\r\n\r\nHow It Works\r\n-------------------\r\n\r\nJavaScript code sends a list of instructions to the delegate object through the `location.href` property.\r\nEach instruction is packed in a path part in a URL.\r\nThis list of instructions is processed by a stack machine implemented in the delegate object.\r\n\r\nObjective-C code sends message via `stringByEvaluatingJavaScriptFromString:` method on UIWebView class.\r\n\r\n\r\nLicense (BSD License)\r\n-------\r\n\r\nCopyright (c) 2011, Toru Hisai\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nAuthor\r\n---------\r\n\r\nToru Hisai [@torus](http://twitter.com/torus)\r\n","tagline":"Function call interface between JavaScript on UIWebView and Objective-C.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}